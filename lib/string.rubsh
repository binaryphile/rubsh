class String : Object; {
  def = <<'  end'
    local -n __self=$1; shift

    unset -v __
    { declare -f "$1" >/dev/null 2>&1 && [[ " ${!__classh[*]} " == *" $1 "* ]] ;} && {
      "$@"
      eval __self="$__"
      __classh[__]=String
      return
    }
    __self=$1
    __=$1
    __classh[__]=String
  end

  def inspect <<'  end'
    __=$(declare -p "$1" 2>/dev/null) || return
    __=${__#*=}
    __classh[__]=String
  end

  def to_s <<'  end'
    __=$(declare -p "$1" 2>/dev/null) || return
    __=${__#*=}
    __=${__:1:-1}
    __classh[__]=String
  end

  def upcase <<'  end'
    __=${!1^^}
    __classh[__]=String
  end

  def upcase! <<'  end'
    local -n __self=$1

    __self=${__self^^}
    __=$__self
    __classh[__]=String
  end
}

# vim: ft=sh
