$(require eval      )
$(require st        )
$(require variable  )

__rb_class_boot () {
  local super=$1
  local -A class=()
  local id

  class[super]=$super
  class[type]=T_CLASS
  [[ -n ${__rb_cClass:-} ]] && class[class]=$__rb_cClass
  __st_init_numtable
  class[m_tbl]=$__
  __next_id
  id=$__
  __put_object "$id" class
  __=$id
}

__rb_class_inherited () {
  local super=$1
  local klass=$2

  [[ -z $super ]] && super=$__rb_cObject
  __rb_funcall "$super" inherited 1 "$klass"
}

__rb_class_new () {
  local super=$1

  __rb_class_boot "$super"
}

__rb_define_class () {
  local name=$1
  local super=$2
  local klass

  __rb_const_defined "$__rb_cObject" "$name" && {
    __rb_const_get "$__rb_cObject" "$name"
    return
  }
  __rb_define_class_id "$name" "$super"
  klass=$__
  __rb_class_inherited "$super" "$klass"
  __rb_class_tbl[$name]=$klass
  __=$klass
}

__rb_define_class_id () {
  local id=$1
  local super=$2
  local klass
  local -A tmp=()

  [[ -z $super ]] && super=$__rb_cObject
  __rb_class_new "$super"
  klass=$__
  __rb_name_class "$klass" "$id"
  __get_object "$super" tmp
  __rb_make_metaclass "$klass" "${tmp[class]}"
}

__rb_make_metaclass () {
  local obj=$1
  local super=$2
  local klass
  local -A class=()
  local -A object=()
  local -A tmp=()

  __rb_class_boot "$super"
  klass=$__
  __get_object "$klass" class
  class[status]=Singleton
  __put_object "$klass" class
  __get_object "$obj" object
  object[class]=$klass
  __put_object "$obj" object
  __rb_singleton_class_attached "$klass" "$obj"
  __get_object "$obj" object
  [[ ${object[type]} == 'T_CLASS' ]] && {
    __get_object "$klass" class
    class[class]=$klass
    if [[ ${object[status]:-} == 'Singleton' ]]; then
      __rb_class_real "${object[super]}"
      __get_object "$__" tmp
      class[super]=${tmp[class]}
    fi
    __put_object "$klass" class
  }
  __=$klass
}

__rb_singleton_class_attached () {
  local klass=$1
  local obj=$2
  local -A class=()
  local -A iv_tbl=()
  local id

  __get_object "$klass" class
  [[ ${class[status]} != 'Singleton' ]] && return
  [[ -z ${class[iv_tbl]:-} ]] && {
    __st_init_numtable
    id=$__
    class[iv_tbl]=$id
    __put_object "$klass" class
  }
  __get_object "$id" iv_tbl
  iv_tbl[__attached__]=$obj
  __put_object "$id" iv_tbl
}

# vim: ft=sh
