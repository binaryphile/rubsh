$(require ruby)
$(require st  )

Init_var_tables () {
  declare -Ag __rb_class_tbl=()
}

__rb_const_defined () {
  local klass=$1
  local id=$2
  local -A class=()

  __get_object "$klass" class

  while true; do
    { [[ -n ${class[iv_tbl]:-}  ]] && __st_lookup "${class[iv_tbl]}" "$id" '' ;} && return
    [[ -n ${class[super]:-}     ]] || return
    __get_object "${class[super]}" class
  done
}

__rb_const_get () {
  local klass=$1
  local id=$2
  local -A class=()
  local tmp
  local value

  __get_object "$klass" class

  __=''
  while true; do
    { [[ -n ${class[iv_tbl]:-}  ]] && __st_lookup "${class[iv_tbl]}" "$id" value ;} && { __=$value; return ;}
    { (( tmp == __rb_cObject    )) && __top_const_get                "$id" value ;} && { __=$value; return ;}
    [[ -n ${class[super]:-}     ]] || return
    tmp=${class[super]}
    __get_object "$tmp" class
  done
}

__rb_iv_set () {
  local obj=$1
  local name=$2
  local val=$3

  __rb_ivar_set "$obj" "$name" "$val"
}

__rb_ivar_set () {
  local obj=$1
  local id=$2
  local val=$3
  local -A object=()
  local -A iv_tbl=()

  __get_object "$obj" object
  [[ -z ${object[iv_tbl]:-} ]] && {
    __st_init_numtable
    object[iv_tbl]=$__
    __put_object "$obj" object
  }
  __get_object "${object[iv_tbl]}" iv_tbl
  iv_tbl[$id]=$val
  __put_object "${object[iv_tbl]}" iv_tbl
  __=$val
}

__rb_name_class () {
  local klass=$1
  local id=$2

  __rb_iv_set "$klass" __classid__ "$id"
}

__top_const_get () {
  local ___id=$1
  local ___klassp=$2

  __st_lookup "$__rb_class_tbl" "$___id" "$___klassp" && { __=$__Qtrue; return ;}
  __=$__Qfalse
  return 1
}

# vim: ft=sh
