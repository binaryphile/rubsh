$(require gc    )
$(require inits )
$(require ruby  )
$(require util  )

__rb_call () {
  local klass=$1
  local recv=$2
  local mid=$3
  local argc=$4; shift 4
  local argv=( "$@" )
  local body

  __rb_get_method_body "$klass" "$mid"
  body=$__
  [[ -n $body ]] || return
  rb_call0 "$recv" "$body" "$argc" "${argv[@]}"
}

__rb_call0 () {
  local recv=$1
  local body=$2
  local argc=$3; shift 3
  local argv=( "$@" )
  local -A bod=()
  local len
  local self=$recv

  __get_object "$body" bod
  len=${bod[argc]}
  call_cfunc "${bod[cfnc]}" "$recv" "$len" "$argc" "${argv[@]}"
}

__rb_funcall () {
  local recv=$1
  local mid=$2
  local n=$3; shift 3
  local va_alist=( "$@" )
  local class

  __rb_class_of "$recv"
  class=$__
  __rb_call "$class" "$recv" "$mid" "$n" "${va_alist[@]}"
}

ruby_init () {
  local funcs
  local vars

  funcs=(
    Init_Object
    Init_heap
    Init_var_tables
    rb_call_inits
    ruby_init
  )

  vars=(
    RUBSH_LIB
    __
    __heap
    __last_id
    __rb_cClass
    __rb_cFalseClass
    __rb_cNilClass
    __rb_cObject
    __rb_cTrueClass
    __rb_class_tbl
    __rb_global_tbl
    __ruby_class
    __ruby_top_self
    self
  )
  unset -v "${vars[@]}"

  Init_heap

  rb_call_inits
  __ruby_class=$__rb_cObject
  self=$__ruby_top_self

  unset -f "${funcs[@]}"
  __=''
}

# vim: ft=sh
