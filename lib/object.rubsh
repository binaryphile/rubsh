$(require keywords)

class Object
  def class << '  end'
    __=${__classh[$1]}
  end

  def methods <<'  end'
    local id=$1
    local inherited=${2:-true}
    local class=${__classh[$id]}
    local methods=()

    case $inherited in
      'false' ) ;;
      'true'  )
        methods=( ${__methodsh[$class]} )
        while [[ -n ${__superh[$class]:-} ]]; do
          class=${__superh[$class]}
          methods+=( ${__methodsh[$class]} )
        done
        ;;
      * ) return 1;;
    esac
    __next_id
    id=$__
    __inspect methods
    eval "$id=$__"
    __typeh[$id]=array
    __classh[$id]=array
    __=$id
  end

  def puts <<'  end'
    local id=$1; shift

    printf '%s\n' "$@"
    __=nil
  end
rubend

# vim: ft=sh
