$(require class)

__boot_defclass () {
  local name=$1
  local super=$2

  __rb_class_boot "$super"
  __rb_class_tbl[$name]=$__
}

Init_Object () {
  __boot_defclass Object ''
  __rb_cObject=$__
  __boot_defclass Class "$__rb_cObject"
  __rb_cClass=$__
  __rb_make_metaclass "$__rb_cObject" "$__rb_cClass"
  __rb_make_metaclass "$__rb_cClass" "$__"
  __rb_obj_alloc "$__rb_cObject"
  __ruby_top_self=$__
  __rb_define_class NilClass "$__rb_cObject"
  __rb_cNilClass=$__
}

__rb_class_allocate_instance () {
  local class=$1
  local -A object=()
  local id

  object[type]=T_OBJECT
  object[class]=$class
  __next_id
  id=$__
  __put_object "$id" object
  __=$id
}

__rb_class_real () {
  local cl
  local -A class=()

  __get_object "$cl" class
  while [[ ${class[status]} == 'Singleton' ]]; do
    cl=${class[super]}
    __get_object "$cl" class
  done
  __=$cl
}

__rb_obj_alloc () { __rb_class_allocate_instance "$@" ;}

# vim: ft=sh
